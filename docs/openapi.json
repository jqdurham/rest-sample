{
  "openapi": "3.0.0",
  "info": {
    "title": "Sample REST API",
    "version": "0.0.1",
    "description": "This API interacts with a backend that writes data to in-memory caches which are wiped clean upon restart. The RESTful components of this API are generated from this document, ensuring an API-first design and keeping the code in alignment with the documentation.",
    "license": {
      "name": "MIT",
      "url": "https://www.mit.edu/~amini/LICENSE.md"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Users"
    },
    {
      "name": "posts",
      "description": "Posts"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": ["user"],
        "description": "Fetches a list of users",
        "operationId": "listUsers",
        "responses": {
          "200": {
            "description": "Returns list of users",
            "content": {
              "application/json": {
                "schema": {
                  "title": "User list",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["user"],
        "description": "Creates a user",
        "operationId": "createUser",
        "requestBody": {
          "$ref": "#/components/requestBodies/UserBody"
        },
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Input parameters were invalid or failed validation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "parameters": [
        {
          "name": "id",
          "description": "Unique user identifier",
          "in": "path",
          "schema": {
            "type": "integer",
            "format": "int64"
          },
          "example": 1337,
          "required": true
        }
      ],
      "get": {
        "tags": ["user"],
        "description": "Fetches a single user by identifier",
        "operationId": "getUser",
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFound"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["user"],
        "description": "Updates individual user",
        "operationId": "updateUser",
        "requestBody": {
          "$ref": "#/components/requestBodies/UserBody"
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInput"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFound"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["user"],
        "description": "Deletes an individual user",
        "operationId": "deleteUser",
        "responses": {
          "204": {
            "description": "User deleted"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFound"
                }
              }
            }
          }
        }
      }
    },
    "/posts": {
      "get": {
        "tags": ["post"],
        "description": "Fetches a list of posts",
        "operationId": "listPosts",
        "responses": {
          "200": {
            "description": "Returns list of posts",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Post list",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["post"],
        "description": "Creates a post",
        "operationId": "createPost",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostBody"
        },
        "responses": {
          "201": {
            "description": "Post created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "400": {
            "description": "Input parameters were invalid or failed validation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        }
      }
    },
    "/posts/{id}": {
      "parameters": [
        {
          "name": "id",
          "description": "Unique user identifier",
          "in": "path",
          "schema": {
            "type": "integer",
            "format": "int64"
          },
          "example": 1337,
          "required": true
        }
      ],
      "get": {
        "tags": ["post"],
        "description": "Fetches a single post by identifier",
        "operationId": "getPost",
        "responses": {
          "200": {
            "description": "Post found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFound"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["post"],
        "description": "Updates individual post",
        "operationId": "updatePost",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostBody"
        },
        "responses": {
          "200": {
            "description": "Post updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostInput"
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFound"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["post"],
        "description": "Deletes an individual post",
        "operationId": "deletePost",
        "responses": {
          "204": {
            "description": "Post deleted"
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFound"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "requestBodies": {
      "UserBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UserInput"
            }
          }
        }
      },
      "PostBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PostInput"
            }
          }
        }
      }
    },
    "schemas": {
      "ServerError": {
        "type": "string",
        "default": "Unexpected error occurred"
      },
      "ResourceNotFound": {
        "type": "string",
        "default": "Resource not found"
      },
      "BadRequest": {
        "type": "string",
        "default": "Invalid client input"
      },
      "UserInput": {
        "type": "object",
        "required": [
          "name",
          "email"
        ],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 200,
            "description": "Users full name",
            "example": "John Q. Public"
          },
          "email": {
            "type": "string",
            "minLength": 3,
            "maxLength": 200,
            "description": "Users email address",
            "example": "john@public.com"
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "id",
          "name",
          "email"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9223372036854775807
          },
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 200,
            "description": "Users full name",
            "example": "John Q. Public"
          },
          "email": {
            "type": "string",
            "minLength": 3,
            "maxLength": 200,
            "description": "Users email address",
            "example": "john@public.com"
          }
        }
      },
      "PostInput": {
        "type": "object",
        "required": ["title", "content", "user_id"],
        "properties": {
          "title": {
            "type": "string",
            "minLength": 2,
            "maxLength": 200,
            "description": "Short headline of your post",
            "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
          },
          "content": {
            "type": "string",
            "minLength": 3,
            "maxLength": 5000,
            "description": "Post content",
            "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
          },
          "user_id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9223372036854775807
          }
        }
      },
      "Post": {
        "type": "object",
        "required": [
          "title",
          "content",
          "user_id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9223372036854775807
          },
          "title": {
            "type": "string",
            "minLength": 2,
            "maxLength": 200,
            "description": "Short headline of your post",
            "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
          },
          "content": {
            "type": "string",
            "minLength": 3,
            "maxLength": 5000,
            "description": "Post content",
            "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
          },
          "user_id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9223372036854775807
          }
        }
      }
    }
  }
}